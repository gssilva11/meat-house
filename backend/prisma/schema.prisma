// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Product {
  id_product        Int                @id @default(autoincrement())
  name              String             @unique
  price             Decimal
  imageProduct      String             @unique
  category          String        
  availability      Boolean            @default(true)

  id_category       Category           @relation(fields: [category], references: [category])

  orderItem         OrderItem[]
}

model Category {
  id_category       Int                @id @default(autoincrement())
  category          String             @unique

  product           Product[]
}


model User {        
  id_user           Int                @id        @default(autoincrement())
  first_name        String        
  last_name         String        
  phone             String
  email             String             @unique
  password          String        
  is_admin          Boolean            @default(false)

  address           Address[]
  order             Order[]
}  

model Address {
  id_address        Int                @unique @default(autoincrement())
  id_user           Int
  street_name       String
  house_number      Int
  complements       String             @default("-")
  neighborhood      String
  city              String
  state             String
  
  user              User               @relation(fields: [id_user], references: [id_user])

  order             Order []
}       

model Order {       
  id_order          Int                @id @default(autoincrement())
  id_user           Int
  id_address        Int?
  datetime_order    DateTime           @default(now())
  status            Status
  total             Decimal            @default(0.00)

  user              User               @relation(fields: [id_user], references: [id_user])
  address           Address?            @relation(fields: [id_address], references: [id_address])

  orderItem         OrderItem[]
}       

enum Status {
  CART  
  AWAITING        
  PREPARING       
  DECLINE       
  CANCELED        
  READY       
  DONE        
}       

model OrderItem {       
  id_orderItem      Int                @id @default(autoincrement())
  id_order          Int
  id_product        Int       
  cuttingType       String
  quantity          Decimal       
  priceOnTheDay     Decimal       
  description       String             @default("-") @db.VarChar(250)

  id_cuttingType    CuttingType        @relation(fields: [cuttingType], references: [cuttingType])
  product           Product            @relation(fields: [id_product], references: [id_product])
  order             Order              @relation(fields: [id_order], references: [id_order])
}       

model CuttingType {         
  id_cuttingType    Int                @id @default(autoincrement())
  cuttingType       String             @unique

  orderItems        OrderItem[]        
}       
     